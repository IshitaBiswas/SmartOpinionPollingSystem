#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace SOP.Data
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="dbSmartOpinion")]
	public partial class SOPDbDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void InserttblOrganization(tblOrganization instance);
    partial void UpdatetblOrganization(tblOrganization instance);
    partial void DeletetblOrganization(tblOrganization instance);
    partial void InserttblVotingQuestionDetail(tblVotingQuestionDetail instance);
    partial void UpdatetblVotingQuestionDetail(tblVotingQuestionDetail instance);
    partial void DeletetblVotingQuestionDetail(tblVotingQuestionDetail instance);
    partial void InserttblUser(tblUser instance);
    partial void UpdatetblUser(tblUser instance);
    partial void DeletetblUser(tblUser instance);
    partial void InserttblVotingCategoryDesc(tblVotingCategoryDesc instance);
    partial void UpdatetblVotingCategoryDesc(tblVotingCategoryDesc instance);
    partial void DeletetblVotingCategoryDesc(tblVotingCategoryDesc instance);
    partial void InserttblUserVotingCategory(tblUserVotingCategory instance);
    partial void UpdatetblUserVotingCategory(tblUserVotingCategory instance);
    partial void DeletetblUserVotingCategory(tblUserVotingCategory instance);
    #endregion
		
		public SOPDbDataContext() : 
				base(global::SOP.Data.Properties.Settings.Default.dbSmartOpinionConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public SOPDbDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public SOPDbDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public SOPDbDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public SOPDbDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<tblOrganization> tblOrganizations
		{
			get
			{
				return this.GetTable<tblOrganization>();
			}
		}
		
		public System.Data.Linq.Table<tblVotingQuestionDetail> tblVotingQuestionDetails
		{
			get
			{
				return this.GetTable<tblVotingQuestionDetail>();
			}
		}
		
		public System.Data.Linq.Table<tblOrgVotingCategory> tblOrgVotingCategories
		{
			get
			{
				return this.GetTable<tblOrgVotingCategory>();
			}
		}
		
		public System.Data.Linq.Table<tblUser> tblUsers
		{
			get
			{
				return this.GetTable<tblUser>();
			}
		}
		
		public System.Data.Linq.Table<tblUserVotingDetail> tblUserVotingDetails
		{
			get
			{
				return this.GetTable<tblUserVotingDetail>();
			}
		}
		
		public System.Data.Linq.Table<tblVotingCategoryDesc> tblVotingCategoryDescs
		{
			get
			{
				return this.GetTable<tblVotingCategoryDesc>();
			}
		}
		
		public System.Data.Linq.Table<tblUserVotingCategory> tblUserVotingCategories
		{
			get
			{
				return this.GetTable<tblUserVotingCategory>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.tblOrganization")]
	public partial class tblOrganization : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _OrgID;
		
		private string _OrgName;
		
		private string _OrgWebsite;
		
		private string _OrgCategory;
		
		private string _OrgRegPassword;
		
		private EntitySet<tblVotingQuestionDetail> _tblVotingQuestionDetails;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnOrgIDChanging(string value);
    partial void OnOrgIDChanged();
    partial void OnOrgNameChanging(string value);
    partial void OnOrgNameChanged();
    partial void OnOrgWebsiteChanging(string value);
    partial void OnOrgWebsiteChanged();
    partial void OnOrgCategoryChanging(string value);
    partial void OnOrgCategoryChanged();
    partial void OnOrgRegPasswordChanging(string value);
    partial void OnOrgRegPasswordChanged();
    #endregion
		
		public tblOrganization()
		{
			this._tblVotingQuestionDetails = new EntitySet<tblVotingQuestionDetail>(new Action<tblVotingQuestionDetail>(this.attach_tblVotingQuestionDetails), new Action<tblVotingQuestionDetail>(this.detach_tblVotingQuestionDetails));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OrgID", DbType="NVarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string OrgID
		{
			get
			{
				return this._OrgID;
			}
			set
			{
				if ((this._OrgID != value))
				{
					this.OnOrgIDChanging(value);
					this.SendPropertyChanging();
					this._OrgID = value;
					this.SendPropertyChanged("OrgID");
					this.OnOrgIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OrgName", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
		public string OrgName
		{
			get
			{
				return this._OrgName;
			}
			set
			{
				if ((this._OrgName != value))
				{
					this.OnOrgNameChanging(value);
					this.SendPropertyChanging();
					this._OrgName = value;
					this.SendPropertyChanged("OrgName");
					this.OnOrgNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OrgWebsite", DbType="NVarChar(300) NOT NULL", CanBeNull=false)]
		public string OrgWebsite
		{
			get
			{
				return this._OrgWebsite;
			}
			set
			{
				if ((this._OrgWebsite != value))
				{
					this.OnOrgWebsiteChanging(value);
					this.SendPropertyChanging();
					this._OrgWebsite = value;
					this.SendPropertyChanged("OrgWebsite");
					this.OnOrgWebsiteChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OrgCategory", DbType="NChar(10)")]
		public string OrgCategory
		{
			get
			{
				return this._OrgCategory;
			}
			set
			{
				if ((this._OrgCategory != value))
				{
					this.OnOrgCategoryChanging(value);
					this.SendPropertyChanging();
					this._OrgCategory = value;
					this.SendPropertyChanged("OrgCategory");
					this.OnOrgCategoryChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OrgRegPassword", DbType="NVarChar(50)")]
		public string OrgRegPassword
		{
			get
			{
				return this._OrgRegPassword;
			}
			set
			{
				if ((this._OrgRegPassword != value))
				{
					this.OnOrgRegPasswordChanging(value);
					this.SendPropertyChanging();
					this._OrgRegPassword = value;
					this.SendPropertyChanged("OrgRegPassword");
					this.OnOrgRegPasswordChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tblOrganization_tblVotingQuestionDetail", Storage="_tblVotingQuestionDetails", ThisKey="OrgID", OtherKey="OrgID")]
		public EntitySet<tblVotingQuestionDetail> tblVotingQuestionDetails
		{
			get
			{
				return this._tblVotingQuestionDetails;
			}
			set
			{
				this._tblVotingQuestionDetails.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_tblVotingQuestionDetails(tblVotingQuestionDetail entity)
		{
			this.SendPropertyChanging();
			entity.tblOrganization = this;
		}
		
		private void detach_tblVotingQuestionDetails(tblVotingQuestionDetail entity)
		{
			this.SendPropertyChanging();
			entity.tblOrganization = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.tblVotingQuestionDetails")]
	public partial class tblVotingQuestionDetail : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _QuestionID;
		
		private int _VotingQuestionCategoryID;
		
		private string _OrgID;
		
		private string _QuestionText;
		
		private System.Nullable<int> _VotedYes;
		
		private System.Nullable<int> _VotedNo;
		
		private System.DateTime _VotingStartDate;
		
		private System.DateTime _VotingEndDate;
		
		private EntityRef<tblOrganization> _tblOrganization;
		
		private EntityRef<tblVotingCategoryDesc> _tblVotingCategoryDesc;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnQuestionIDChanging(int value);
    partial void OnQuestionIDChanged();
    partial void OnVotingQuestionCategoryIDChanging(int value);
    partial void OnVotingQuestionCategoryIDChanged();
    partial void OnOrgIDChanging(string value);
    partial void OnOrgIDChanged();
    partial void OnQuestionTextChanging(string value);
    partial void OnQuestionTextChanged();
    partial void OnVotedYesChanging(System.Nullable<int> value);
    partial void OnVotedYesChanged();
    partial void OnVotedNoChanging(System.Nullable<int> value);
    partial void OnVotedNoChanged();
    partial void OnVotingStartDateChanging(System.DateTime value);
    partial void OnVotingStartDateChanged();
    partial void OnVotingEndDateChanging(System.DateTime value);
    partial void OnVotingEndDateChanged();
    #endregion
		
		public tblVotingQuestionDetail()
		{
			this._tblOrganization = default(EntityRef<tblOrganization>);
			this._tblVotingCategoryDesc = default(EntityRef<tblVotingCategoryDesc>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_QuestionID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int QuestionID
		{
			get
			{
				return this._QuestionID;
			}
			set
			{
				if ((this._QuestionID != value))
				{
					this.OnQuestionIDChanging(value);
					this.SendPropertyChanging();
					this._QuestionID = value;
					this.SendPropertyChanged("QuestionID");
					this.OnQuestionIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_VotingQuestionCategoryID", DbType="Int NOT NULL")]
		public int VotingQuestionCategoryID
		{
			get
			{
				return this._VotingQuestionCategoryID;
			}
			set
			{
				if ((this._VotingQuestionCategoryID != value))
				{
					if (this._tblVotingCategoryDesc.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnVotingQuestionCategoryIDChanging(value);
					this.SendPropertyChanging();
					this._VotingQuestionCategoryID = value;
					this.SendPropertyChanged("VotingQuestionCategoryID");
					this.OnVotingQuestionCategoryIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OrgID", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string OrgID
		{
			get
			{
				return this._OrgID;
			}
			set
			{
				if ((this._OrgID != value))
				{
					if (this._tblOrganization.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnOrgIDChanging(value);
					this.SendPropertyChanging();
					this._OrgID = value;
					this.SendPropertyChanged("OrgID");
					this.OnOrgIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_QuestionText", DbType="NVarChar(1000) NOT NULL", CanBeNull=false)]
		public string QuestionText
		{
			get
			{
				return this._QuestionText;
			}
			set
			{
				if ((this._QuestionText != value))
				{
					this.OnQuestionTextChanging(value);
					this.SendPropertyChanging();
					this._QuestionText = value;
					this.SendPropertyChanged("QuestionText");
					this.OnQuestionTextChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_VotedYes", DbType="Int")]
		public System.Nullable<int> VotedYes
		{
			get
			{
				return this._VotedYes;
			}
			set
			{
				if ((this._VotedYes != value))
				{
					this.OnVotedYesChanging(value);
					this.SendPropertyChanging();
					this._VotedYes = value;
					this.SendPropertyChanged("VotedYes");
					this.OnVotedYesChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_VotedNo", DbType="Int")]
		public System.Nullable<int> VotedNo
		{
			get
			{
				return this._VotedNo;
			}
			set
			{
				if ((this._VotedNo != value))
				{
					this.OnVotedNoChanging(value);
					this.SendPropertyChanging();
					this._VotedNo = value;
					this.SendPropertyChanged("VotedNo");
					this.OnVotedNoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_VotingStartDate", DbType="DateTime NOT NULL")]
		public System.DateTime VotingStartDate
		{
			get
			{
				return this._VotingStartDate;
			}
			set
			{
				if ((this._VotingStartDate != value))
				{
					this.OnVotingStartDateChanging(value);
					this.SendPropertyChanging();
					this._VotingStartDate = value;
					this.SendPropertyChanged("VotingStartDate");
					this.OnVotingStartDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_VotingEndDate", DbType="DateTime NOT NULL")]
		public System.DateTime VotingEndDate
		{
			get
			{
				return this._VotingEndDate;
			}
			set
			{
				if ((this._VotingEndDate != value))
				{
					this.OnVotingEndDateChanging(value);
					this.SendPropertyChanging();
					this._VotingEndDate = value;
					this.SendPropertyChanged("VotingEndDate");
					this.OnVotingEndDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tblOrganization_tblVotingQuestionDetail", Storage="_tblOrganization", ThisKey="OrgID", OtherKey="OrgID", IsForeignKey=true)]
		public tblOrganization tblOrganization
		{
			get
			{
				return this._tblOrganization.Entity;
			}
			set
			{
				tblOrganization previousValue = this._tblOrganization.Entity;
				if (((previousValue != value) 
							|| (this._tblOrganization.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._tblOrganization.Entity = null;
						previousValue.tblVotingQuestionDetails.Remove(this);
					}
					this._tblOrganization.Entity = value;
					if ((value != null))
					{
						value.tblVotingQuestionDetails.Add(this);
						this._OrgID = value.OrgID;
					}
					else
					{
						this._OrgID = default(string);
					}
					this.SendPropertyChanged("tblOrganization");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tblVotingCategoryDesc_tblVotingQuestionDetail", Storage="_tblVotingCategoryDesc", ThisKey="VotingQuestionCategoryID", OtherKey="VotingCategoryID", IsForeignKey=true)]
		public tblVotingCategoryDesc tblVotingCategoryDesc
		{
			get
			{
				return this._tblVotingCategoryDesc.Entity;
			}
			set
			{
				tblVotingCategoryDesc previousValue = this._tblVotingCategoryDesc.Entity;
				if (((previousValue != value) 
							|| (this._tblVotingCategoryDesc.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._tblVotingCategoryDesc.Entity = null;
						previousValue.tblVotingQuestionDetails.Remove(this);
					}
					this._tblVotingCategoryDesc.Entity = value;
					if ((value != null))
					{
						value.tblVotingQuestionDetails.Add(this);
						this._VotingQuestionCategoryID = value.VotingCategoryID;
					}
					else
					{
						this._VotingQuestionCategoryID = default(int);
					}
					this.SendPropertyChanged("tblVotingCategoryDesc");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.tblOrgVotingCategory")]
	public partial class tblOrgVotingCategory
	{
		
		private string _OrgID;
		
		private int _OrgVotingCategoryID;
		
		public tblOrgVotingCategory()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OrgID", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string OrgID
		{
			get
			{
				return this._OrgID;
			}
			set
			{
				if ((this._OrgID != value))
				{
					this._OrgID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OrgVotingCategoryID", DbType="Int NOT NULL")]
		public int OrgVotingCategoryID
		{
			get
			{
				return this._OrgVotingCategoryID;
			}
			set
			{
				if ((this._OrgVotingCategoryID != value))
				{
					this._OrgVotingCategoryID = value;
				}
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.tblUser")]
	public partial class tblUser : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _UserID;
		
		private string _FirstName;
		
		private string _LastName;
		
		private string _Gender;
		
		private int _Age;
		
		private string _Email;
		
		private string _Password;
		
		private string _Phoneno;
		
		private string _Occupation;
		
		private EntitySet<tblUserVotingCategory> _tblUserVotingCategories;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnUserIDChanging(string value);
    partial void OnUserIDChanged();
    partial void OnFirstNameChanging(string value);
    partial void OnFirstNameChanged();
    partial void OnLastNameChanging(string value);
    partial void OnLastNameChanged();
    partial void OnGenderChanging(string value);
    partial void OnGenderChanged();
    partial void OnAgeChanging(int value);
    partial void OnAgeChanged();
    partial void OnEmailChanging(string value);
    partial void OnEmailChanged();
    partial void OnPasswordChanging(string value);
    partial void OnPasswordChanged();
    partial void OnPhonenoChanging(string value);
    partial void OnPhonenoChanged();
    partial void OnOccupationChanging(string value);
    partial void OnOccupationChanged();
    #endregion
		
		public tblUser()
		{
			this._tblUserVotingCategories = new EntitySet<tblUserVotingCategory>(new Action<tblUserVotingCategory>(this.attach_tblUserVotingCategories), new Action<tblUserVotingCategory>(this.detach_tblUserVotingCategories));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserID", DbType="NVarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string UserID
		{
			get
			{
				return this._UserID;
			}
			set
			{
				if ((this._UserID != value))
				{
					this.OnUserIDChanging(value);
					this.SendPropertyChanging();
					this._UserID = value;
					this.SendPropertyChanged("UserID");
					this.OnUserIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FirstName", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string FirstName
		{
			get
			{
				return this._FirstName;
			}
			set
			{
				if ((this._FirstName != value))
				{
					this.OnFirstNameChanging(value);
					this.SendPropertyChanging();
					this._FirstName = value;
					this.SendPropertyChanged("FirstName");
					this.OnFirstNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastName", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string LastName
		{
			get
			{
				return this._LastName;
			}
			set
			{
				if ((this._LastName != value))
				{
					this.OnLastNameChanging(value);
					this.SendPropertyChanging();
					this._LastName = value;
					this.SendPropertyChanged("LastName");
					this.OnLastNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Gender", DbType="NVarChar(10)")]
		public string Gender
		{
			get
			{
				return this._Gender;
			}
			set
			{
				if ((this._Gender != value))
				{
					this.OnGenderChanging(value);
					this.SendPropertyChanging();
					this._Gender = value;
					this.SendPropertyChanged("Gender");
					this.OnGenderChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Age", DbType="Int NOT NULL")]
		public int Age
		{
			get
			{
				return this._Age;
			}
			set
			{
				if ((this._Age != value))
				{
					this.OnAgeChanging(value);
					this.SendPropertyChanging();
					this._Age = value;
					this.SendPropertyChanged("Age");
					this.OnAgeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Email", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string Email
		{
			get
			{
				return this._Email;
			}
			set
			{
				if ((this._Email != value))
				{
					this.OnEmailChanging(value);
					this.SendPropertyChanging();
					this._Email = value;
					this.SendPropertyChanged("Email");
					this.OnEmailChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Password", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string Password
		{
			get
			{
				return this._Password;
			}
			set
			{
				if ((this._Password != value))
				{
					this.OnPasswordChanging(value);
					this.SendPropertyChanging();
					this._Password = value;
					this.SendPropertyChanged("Password");
					this.OnPasswordChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Phoneno", DbType="VarChar(22) NOT NULL", CanBeNull=false)]
		public string Phoneno
		{
			get
			{
				return this._Phoneno;
			}
			set
			{
				if ((this._Phoneno != value))
				{
					this.OnPhonenoChanging(value);
					this.SendPropertyChanging();
					this._Phoneno = value;
					this.SendPropertyChanged("Phoneno");
					this.OnPhonenoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Occupation", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
		public string Occupation
		{
			get
			{
				return this._Occupation;
			}
			set
			{
				if ((this._Occupation != value))
				{
					this.OnOccupationChanging(value);
					this.SendPropertyChanging();
					this._Occupation = value;
					this.SendPropertyChanged("Occupation");
					this.OnOccupationChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tblUser_tblUserVotingCategory", Storage="_tblUserVotingCategories", ThisKey="UserID", OtherKey="UserID")]
		public EntitySet<tblUserVotingCategory> tblUserVotingCategories
		{
			get
			{
				return this._tblUserVotingCategories;
			}
			set
			{
				this._tblUserVotingCategories.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_tblUserVotingCategories(tblUserVotingCategory entity)
		{
			this.SendPropertyChanging();
			entity.tblUser = this;
		}
		
		private void detach_tblUserVotingCategories(tblUserVotingCategory entity)
		{
			this.SendPropertyChanging();
			entity.tblUser = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.tblUserVotingDetails")]
	public partial class tblUserVotingDetail
	{
		
		private string _UserID;
		
		private int _QuestionID;
		
		private bool _B_UserVote;
		
		private System.DateTime _DtVoteCasted;
		
		public tblUserVotingDetail()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserID", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string UserID
		{
			get
			{
				return this._UserID;
			}
			set
			{
				if ((this._UserID != value))
				{
					this._UserID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_QuestionID", DbType="Int NOT NULL")]
		public int QuestionID
		{
			get
			{
				return this._QuestionID;
			}
			set
			{
				if ((this._QuestionID != value))
				{
					this._QuestionID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_B_UserVote", DbType="Bit NOT NULL")]
		public bool B_UserVote
		{
			get
			{
				return this._B_UserVote;
			}
			set
			{
				if ((this._B_UserVote != value))
				{
					this._B_UserVote = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DtVoteCasted", DbType="DateTime NOT NULL")]
		public System.DateTime DtVoteCasted
		{
			get
			{
				return this._DtVoteCasted;
			}
			set
			{
				if ((this._DtVoteCasted != value))
				{
					this._DtVoteCasted = value;
				}
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.tblVotingCategoryDesc")]
	public partial class tblVotingCategoryDesc : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _VotingCategoryID;
		
		private string _CategoryDescription;
		
		private EntitySet<tblVotingQuestionDetail> _tblVotingQuestionDetails;
		
		private EntitySet<tblUserVotingCategory> _tblUserVotingCategories;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnVotingCategoryIDChanging(int value);
    partial void OnVotingCategoryIDChanged();
    partial void OnCategoryDescriptionChanging(string value);
    partial void OnCategoryDescriptionChanged();
    #endregion
		
		public tblVotingCategoryDesc()
		{
			this._tblVotingQuestionDetails = new EntitySet<tblVotingQuestionDetail>(new Action<tblVotingQuestionDetail>(this.attach_tblVotingQuestionDetails), new Action<tblVotingQuestionDetail>(this.detach_tblVotingQuestionDetails));
			this._tblUserVotingCategories = new EntitySet<tblUserVotingCategory>(new Action<tblUserVotingCategory>(this.attach_tblUserVotingCategories), new Action<tblUserVotingCategory>(this.detach_tblUserVotingCategories));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_VotingCategoryID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int VotingCategoryID
		{
			get
			{
				return this._VotingCategoryID;
			}
			set
			{
				if ((this._VotingCategoryID != value))
				{
					this.OnVotingCategoryIDChanging(value);
					this.SendPropertyChanging();
					this._VotingCategoryID = value;
					this.SendPropertyChanged("VotingCategoryID");
					this.OnVotingCategoryIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CategoryDescription", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
		public string CategoryDescription
		{
			get
			{
				return this._CategoryDescription;
			}
			set
			{
				if ((this._CategoryDescription != value))
				{
					this.OnCategoryDescriptionChanging(value);
					this.SendPropertyChanging();
					this._CategoryDescription = value;
					this.SendPropertyChanged("CategoryDescription");
					this.OnCategoryDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tblVotingCategoryDesc_tblVotingQuestionDetail", Storage="_tblVotingQuestionDetails", ThisKey="VotingCategoryID", OtherKey="VotingQuestionCategoryID")]
		public EntitySet<tblVotingQuestionDetail> tblVotingQuestionDetails
		{
			get
			{
				return this._tblVotingQuestionDetails;
			}
			set
			{
				this._tblVotingQuestionDetails.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tblVotingCategoryDesc_tblUserVotingCategory", Storage="_tblUserVotingCategories", ThisKey="VotingCategoryID", OtherKey="UserVotingCategoryID")]
		public EntitySet<tblUserVotingCategory> tblUserVotingCategories
		{
			get
			{
				return this._tblUserVotingCategories;
			}
			set
			{
				this._tblUserVotingCategories.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_tblVotingQuestionDetails(tblVotingQuestionDetail entity)
		{
			this.SendPropertyChanging();
			entity.tblVotingCategoryDesc = this;
		}
		
		private void detach_tblVotingQuestionDetails(tblVotingQuestionDetail entity)
		{
			this.SendPropertyChanging();
			entity.tblVotingCategoryDesc = null;
		}
		
		private void attach_tblUserVotingCategories(tblUserVotingCategory entity)
		{
			this.SendPropertyChanging();
			entity.tblVotingCategoryDesc = this;
		}
		
		private void detach_tblUserVotingCategories(tblUserVotingCategory entity)
		{
			this.SendPropertyChanging();
			entity.tblVotingCategoryDesc = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.tblUserVotingCategory")]
	public partial class tblUserVotingCategory : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _UserID;
		
		private int _UserVotingCategoryID;
		
		private EntityRef<tblUser> _tblUser;
		
		private EntityRef<tblVotingCategoryDesc> _tblVotingCategoryDesc;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnUserIDChanging(string value);
    partial void OnUserIDChanged();
    partial void OnUserVotingCategoryIDChanging(int value);
    partial void OnUserVotingCategoryIDChanged();
    #endregion
		
		public tblUserVotingCategory()
		{
			this._tblUser = default(EntityRef<tblUser>);
			this._tblVotingCategoryDesc = default(EntityRef<tblVotingCategoryDesc>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserID", DbType="NVarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string UserID
		{
			get
			{
				return this._UserID;
			}
			set
			{
				if ((this._UserID != value))
				{
					if (this._tblUser.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnUserIDChanging(value);
					this.SendPropertyChanging();
					this._UserID = value;
					this.SendPropertyChanged("UserID");
					this.OnUserIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserVotingCategoryID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int UserVotingCategoryID
		{
			get
			{
				return this._UserVotingCategoryID;
			}
			set
			{
				if ((this._UserVotingCategoryID != value))
				{
					if (this._tblVotingCategoryDesc.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnUserVotingCategoryIDChanging(value);
					this.SendPropertyChanging();
					this._UserVotingCategoryID = value;
					this.SendPropertyChanged("UserVotingCategoryID");
					this.OnUserVotingCategoryIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tblUser_tblUserVotingCategory", Storage="_tblUser", ThisKey="UserID", OtherKey="UserID", IsForeignKey=true)]
		public tblUser tblUser
		{
			get
			{
				return this._tblUser.Entity;
			}
			set
			{
				tblUser previousValue = this._tblUser.Entity;
				if (((previousValue != value) 
							|| (this._tblUser.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._tblUser.Entity = null;
						previousValue.tblUserVotingCategories.Remove(this);
					}
					this._tblUser.Entity = value;
					if ((value != null))
					{
						value.tblUserVotingCategories.Add(this);
						this._UserID = value.UserID;
					}
					else
					{
						this._UserID = default(string);
					}
					this.SendPropertyChanged("tblUser");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tblVotingCategoryDesc_tblUserVotingCategory", Storage="_tblVotingCategoryDesc", ThisKey="UserVotingCategoryID", OtherKey="VotingCategoryID", IsForeignKey=true)]
		public tblVotingCategoryDesc tblVotingCategoryDesc
		{
			get
			{
				return this._tblVotingCategoryDesc.Entity;
			}
			set
			{
				tblVotingCategoryDesc previousValue = this._tblVotingCategoryDesc.Entity;
				if (((previousValue != value) 
							|| (this._tblVotingCategoryDesc.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._tblVotingCategoryDesc.Entity = null;
						previousValue.tblUserVotingCategories.Remove(this);
					}
					this._tblVotingCategoryDesc.Entity = value;
					if ((value != null))
					{
						value.tblUserVotingCategories.Add(this);
						this._UserVotingCategoryID = value.VotingCategoryID;
					}
					else
					{
						this._UserVotingCategoryID = default(int);
					}
					this.SendPropertyChanged("tblVotingCategoryDesc");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
}
#pragma warning restore 1591
